name: CI

on:
  merge_group: {}
  pull_request: {}
  push:
    branches-ignore:
      # These should always correspond to pull requests, so ignore them for
      # the push trigger and let them be triggered by the pull_request
      # trigger, avoiding running the workflow twice.  This is a minor
      # optimization so there's no need to ensure this is comprehensive.
      - "dependabot/**"
      - "gh-readonly-queue/**"
      - "renovate/**"
      - "u/**"
    tags:
      - "*"

jobs:
  build:

    runs-on: ubuntu-latest
    timeout-minutes: 10

    # Only do Docker builds of tagged releases and pull requests from ticket
    # branches.  This will still trigger on pull requests from untrusted
    # repositories whose branch names match our tickets/* branch convention,
    # but in this case the build will fail with an error since the secret
    # won't be set.
    if: >
      github.event_name != 'merge_group'
      && (startsWith(github.ref, 'refs/tags/')
          || startsWith(github.ref, 'refs/heads/tickets/')
          || startsWith(github.ref, 'refs/heads/deploy')
          || startsWith(github.ref, 'refs/heads/develop'))

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      
      - uses: actions/setup-node@v4
      
      - name: npm install and build
        run: |
          npm install
          npm run build

      - name: Bring in DDV Flutter app repo
        uses: actions/checkout@v4
        with: 
          repository: 'lsst-ts/rubintv_visualization'
          path: ddv
          ref: 'deploy-slac'

      - name: Set up Flutter environment
        uses: subosito/flutter-action@v2
        with:
          channel: stable

      - name: Set up .env file
        # TODO: location hostname needs to be injected at runtime
        run: echo -e "ADDRESS=/rubintv/ws/ddv\nPORT=8080" > ${{ github.workspace }}/ddv/.env

      - name: Install dependencies
        run: flutter pub get
        working-directory: ./ddv

      - name: Run Flutter tests
        run: flutter test
        working-directory: ./ddv

      - name: Build Flutter web app
        run: flutter build web --base-href /rubintv/ddv/
        working-directory: ./ddv


      - name: Define the Docker tag
        id: vars
        run: echo "tag=$(scripts/docker-tag.sh)" >> $GITHUB_OUTPUT

      - name: Print the tag
        id: print
        run: echo ${{ steps.vars.outputs.tag }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: |
            ghcr.io/lsst-ts/rubintv:${{ steps.vars.outputs.tag }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          platforms: linux/amd64
